package franken

import "fmt"

type ButtonType string

const (
	ButtonTypeDefault ButtonType = "button"
	ButtonTypeSubmit  ButtonType = "submit"
)

type ButtonData struct {
	Text     string
	Type     ButtonType
	Color    FrankenColor
	Disabled bool
	Link     string
	Class    []string
}

templ Button(data ButtonData) {
	if data.Link != "" {
		<a href={ templ.URL(data.Link) }>
			<button disabled?={ data.Disabled } type={ string(data.Type) } class={ templ.Classes("uk-button", fmt.Sprint("uk-button-"+data.Color), data.Class) }>{ data.Text }</button>
		</a>
	} else {
		<button disabled?={ data.Disabled } type={ string(data.Type) } class={ templ.Classes("uk-button", fmt.Sprint("uk-button-"+data.Color), data.Class) }>{ data.Text }</button>
	}
}

func ButtonBuilder() *ButtonData {
	return &ButtonData{
		Text:     "Button",
		Type:     ButtonTypeDefault,
		Disabled: false,
	}
}

func (b *ButtonData) SetText(text string) *ButtonData {
	b.Text = text
	return b
}

func (b *ButtonData) SetType(bType ButtonType) *ButtonData {
	b.Type = bType
	return b
}

func (b *ButtonData) SetColor(bColor FrankenColor) *ButtonData {
	b.Color = bColor
	return b
}

func (b *ButtonData) SetDisabled(disabled bool) *ButtonData {
	b.Disabled = disabled
	return b
}

func (b *ButtonData) SetLink(link string) *ButtonData {
	b.Link = link
	return b
}

func (b *ButtonData) SetClass(class ...string) *ButtonData {
	b.Class = class
	return b
}

templ (b ButtonData) Finish() {
	@Button(b)
}
