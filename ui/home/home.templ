package home

import "github.com/yzaimoglu/base/utils/http"
import "github.com/yzaimoglu/base/ui/franken"
import "github.com/yzaimoglu/base/ui/lucide"

templ Franken() {
	@franken.Component() {
		@franken.ButtonBuilder().SetText("hello").Finish()
	}
	<section class="container mx-auto w-1/2 flex flex-col gap-2">
		<div class="bg-white border border-2 border-slate-50 p-8 rounded-lg">
			@franken.ButtonBuilder().SetText("Hello").SetColor(franken.FrankenColorSecondary).SetType(franken.ButtonTypeDefault).Finish()
			@franken.ButtonBuilder().SetText("Hey").SetColor(franken.FrankenColorPrimary).SetType(franken.ButtonTypeSubmit).SetClass("w-full", "mb-5").SetDisabled(true).Finish()
			@franken.ButtonBuilder().SetText("Hey").SetLink("https://yagi.sh").SetColor(franken.FrankenColorPrimary).SetClass("w-full", "mb-5").SetDisabled(false).Finish()
			@franken.ButtonBuilder().SetText("Test").SetLink("https://yagi.sh").SetColor(franken.FrankenColorDanger).Finish()
		</div>
		<div class="bg-white border border-2 border-slate-50 p-8 rounded-lg">
			@franken.AccordionBuilder().AddItem("hello", templ.Raw("hello"), true).AddItemText("hey", "heyho", false).SetMultiple(false).Finish()
			@franken.AccordionBuilder().AddItem("hello", franken.ButtonBuilder().SetText("Hey").SetLink("https://yagi.sh").SetColor(franken.FrankenColorPrimary).SetClass("w-full", "mb-5").SetDisabled(false).Finish(), false).Finish()
		</div>
		<div class="bg-white border border-2 border-slate-50 p-8 rounded-lg gap-2 grid">
			@franken.AlertBuilder().SetTitle("hello").SetClose(true).SetColor(franken.FrankenColorDanger).SetBackgroundColor(franken.TailwindColorPurple, franken.TailwindColor400).SetContent(templ.Raw("hello")).Finish()
			@franken.AlertBuilder().SetTitle("hello").SetClose(true).SetContentText("hello").Finish()
			@franken.AlertBuilder().SetTitle("hello").SetClose(true).SetContent(templ.Raw("hello")).SetIcon(lucide.Rocket()).Finish()
		</div>
		<div class="bg-white border border-2 border-slate-50 p-8 rounded-lg gap-2 grid">
			@franken.ArticleBuilder().SetTitle("Article").SetContent(
				franken.AlertBuilder().SetTitle("hello").SetClose(true).SetContentText("hello").Finish()).SetMetaText("Description").Finish()
		</div>
		<div class="bg-white border border-2 border-slate-50 p-8 rounded-lg gap-2 grid w-1/2">
			@franken.BadgeBuilder().SetTitleText("test").Finish()
			@franken.BadgeBuilder().SetTitleText("test").SetColor(franken.FrankenColorDanger).Finish()
			@franken.BadgeBuilder().SetTitleText("test").SetBackgroundColor(franken.TailwindColorGreen, franken.TailwindColor50).Finish()
			@franken.BadgeBuilder().SetTitleText("test").Finish()
		</div>
		<div class="bg-white border border-2 border-slate-50 p-8 rounded-lg gap-2 grid">
			@franken.BreadcrumbBuilder().AddItemText("hello", "https://yagi.sh", false, false).AddItemText("second", "https://yagi.sh", false, false).AddItemText("current", "https://yagi.sh", false, true).Finish()
		</div>
		@franken.CardBuilder().SetBody(TestOut(1)).SetFooter(TestOut(2)).SetHeader(TestOut(3)).Finish()
	</section>
	@franken.ContainerBuilder().SetContent(TestOut(4)).SetClass("w-2/3").Finish()
}

templ TestOut(i uint16) {
	if i == 1 {
		<div class="flex flex-row justify-center items-center">
			@franken.BreadcrumbBuilder().AddItemText("hello", "https://yagi.sh", false, false).AddItemText("second", "https://yagi.sh", false, false).AddItemText("current", "https://yagi.sh", false, true).Finish()
		</div>
	} else if i == 2 {
		@franken.ButtonBuilder().SetText("TestButton").SetColor(franken.FrankenColorPrimary).SetClass("w-full").SetLink("https://yagi.sh").Finish()
	} else if i == 3 {
		@franken.BadgeBuilder().SetTitleText("Hello").SetBackgroundColor(franken.TailwindColorPurple, franken.TailwindColor200).Finish()
	} else if i == 4 {
		@franken.CardBuilder().SetBody(TestOut(1)).SetFooter(TestOut(2)).SetHeader(TestOut(3)).Finish()
	}
}

templ Index() {
	<div>
		<p>
			CSRF:
			<br/>
			{ http_utils.CSRF(ctx) }
		</p>
		<p>
			RequestID:
			<br/>
			{ http_utils.RequestID(ctx) }
		</p>
		<p>
			Current Path:
			<br/>
			{ http_utils.CurrentPath(ctx) }
		</p>
	</div>
}
